import 'dart:io';
import 'dart:typed_data';
import 'dart:ui';

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:firebase_storage/firebase_storage.dart';

import 'package:firebase_auth/firebase_auth.dart';
import 'package:image_picker/image_picker.dart';



class sharefoodpage extends StatelessWidget {
  final foodName = TextEditingController();
  final discreption = TextEditingController();
  File image;
  @override
  Widget build(BuildContext context) {

    return Material(
        child: ClipRRect(
          borderRadius: BorderRadius.zero,
          child: Container(
            width: 411.0,
            height: 731.0,
            child: Stack(
                fit: StackFit.expand,
                alignment: Alignment.center,
                overflow: Overflow.visible,
                children: [
                  ClipRRect(
                    borderRadius: BorderRadius.zero,
                    child: Container(
                      color: Color.fromARGB(255, 255, 255, 255),
                    ),
                  ),


                  Positioned(
                    top:230,
                    left:0,
                    child: Container(
                      width: 411.0,
                      height: 8.0,
                      child: ClipRRect(
                        borderRadius: BorderRadius.zero,
                        child: Container(
                          color: Color.fromARGB(255, 244, 245, 247),
                        ),
                      ),
                    ),
                  ),

                  Positioned(
                    left: 240.0,
                    top: 60.0,
                    right: null,
                    bottom: null,
                    width: 100.0,
                    height: 100.0,
                    child: Container(
                      width: 50.0,
                      height: 50.0,
                      child: ClipRRect(
                        borderRadius: BorderRadius.zero,
                        child: Image.asset(
                          'assets/location.png',
                          color: null,
                          fit: BoxFit.cover,
                          width: 50.0,
                          height: 50.0,
                          colorBlendMode: BlendMode.dstATop,
                        ),
                      ),
                    ),
                  ),

                  Positioned(
                    left: 230.0,
                    top: 170.0,
                    right: null,
                    bottom: null,
                    width: 327.0,
                    height: 56.0,
                    child: Text(
                      '''Pick up location''',
                      overflow: TextOverflow.visible,
                      textAlign: TextAlign.left,
                      style: TextStyle(
                        height: 1.588235294117647,
                        fontSize: 17.0,
                        fontFamily: 'Inter',
                        fontWeight: FontWeight.w700,
                        color: Color.fromARGB(255, 61, 84, 128),

                        /* letterSpacing: 0.5, */
                      ),
                    ),
                  ),

                  Positioned(
                    left: 50.0,
                    top: 60.0,
                    right: null,
                    bottom: null,
                    width: 100.0,
                    height: 100.0,
                    child: Container(
                      width: 50.0,
                      height: 50.0,
                      child: ClipRRect(
                        borderRadius: BorderRadius.zero,
                        child: image == null? Image.asset(
                          'assets/addphoto.png',
                          color: null,
                          fit: BoxFit.cover,
                          width: 50.0,
                          height: 50.0,
                          colorBlendMode: BlendMode.dstATop,
                        ) : Image.file(File(image.path))
                      ),
                    ),
                  ),

                  Positioned(
                    left: 50.0,
                    top: 155.0,
                    right: null,
                    bottom: null,
                    width: 327.0,
                    height: 56.0,
                    child: Row(
                      children: <Widget>[
                          FlatButton(
                            onPressed: () async{
                              image = await pickImage(source: ImageSource.gallery);
                            },
                              child: Text(
                      '''Add Photo''',
                      overflow: TextOverflow.visible,
                      textAlign: TextAlign.left,
                      style: TextStyle(
                        height: 1.588235294117647,
                        fontSize: 17.0,
                        fontFamily: 'Inter',
                        fontWeight: FontWeight.w700,
                        color: Color.fromARGB(255, 61, 84, 128),

                        /* letterSpacing: 0.5, */
                      ),
                    ),
                          ),
                    ]

                  ),
                  ),


                  Positioned(
                    left: 27.0,
                    top: 260.0,
                    right: null,
                    bottom: null,
                    width: 327.0,
                    height: 56.0,
                    child: Text(
                      '''Food Name''',
                      overflow: TextOverflow.visible,
                      textAlign: TextAlign.left,
                      style: TextStyle(
                        height: 1.588235294117647,
                        fontSize: 17.0,
                        fontFamily: 'Inter',
                        fontWeight: FontWeight.w700,
                        color: Color.fromARGB(255, 61, 84, 128),

                        /* letterSpacing: 0.5, */
                      ),
                    ),
                  ),
                  Positioned(
                    left: 27.0,
                    top: 310.0,
                    right: null,
                    bottom: null,
                    width: 327.0,
                    height: 56.0,
                    child: Padding(
                      //padding: const EdgeInsets.only(left:15.0,right: 15.0,top:0,bottom: 0),
                      padding: EdgeInsets.symmetric(horizontal: 0),
                      child: TextField(
                          controller: foodName,
                        decoration: InputDecoration(
                            border: OutlineInputBorder(),
                            labelText: 'Food Name',
                            hintText: 'food name'),
                      ),
                    ),
                  ),
                  Positioned(
                    left: 27.0,
                    top: 420.0,
                    right: null,
                    bottom: null,
                    width: 327.0,
                    height: 56.0,
                    child: Text(
                      '''Description''',
                      overflow: TextOverflow.visible,
                      textAlign: TextAlign.left,
                      style: TextStyle(
                        height: 1.588235294117647,
                        fontSize: 17.0,
                        fontFamily: 'Inter',
                        fontWeight: FontWeight.w700,
                        color: Color.fromARGB(255, 61, 84, 128),

                        /* letterSpacing: 0.5, */
                      ),
                    ),
                  ),

                  Positioned(
                    left: 27.0,
                    top: 480.0,
                    right: null,
                    bottom: null,
                    width: 327.0,
                    height: 100.0,
                    child: Padding(
                      //padding: const EdgeInsets.only(left:15.0,right: 15.0,top:0,bottom: 0),
                      padding: EdgeInsets.symmetric(horizontal: 0 , vertical: 0),
                      child: TextField(
                          controller: discreption,
                        decoration: InputDecoration(
                            border: OutlineInputBorder(),
                            labelText: 'Description',
                            hintText: 'description'),
                      ),
                    ),
                  ),
                  Positioned(
                    left: 27.0,
                    top: 570.0,
                    right: null,
                    bottom: null,
                    width: 327.0,
                    height: 56.0,
                    child: Container(
                      height: 50,
                      width: 250,
                      decoration: BoxDecoration(
                          color: Colors.teal, borderRadius: BorderRadius.circular(20)),
                      child: FlatButton(
                        onPressed: (){
                          addNewfood(image: image,productName: foodName.text.toString(),productDescription: discreption.text.toString() );
                        },

                        child: Text(
                          'Share',
                          style: TextStyle(color: Colors.white, fontSize: 25),
                        ),
                      ),
                    ),
                  ),


                ]),
          ),
        ));
  }



  // Returns a [File] object pointing to the image that was picked.
  Future<File> pickImage({@required ImageSource source}) async {
    final imagePicker = ImagePicker();
    final pickedFile = await imagePicker.getImage(
        source: source, imageQuality: 100, maxHeight: 300, maxWidth: 300);
    return File(pickedFile.path);
  }



  Future<bool> addNewfood({String uid, String productName, String productDescription, File image}) async {
    FirebaseStorage _firebaseStorage = FirebaseStorage.instance;
    CollectionReference _products = Firestore.instance.collection('products');
    String imageLink;

    StorageUploadTask snapshot = await _firebaseStorage
          .ref()
          .child('productimage/${uid}${foodName}-${image}')
          .putData(image.readAsBytesSync());
    StorageTaskSnapshot storageTaskSnapshot =await snapshot.onComplete;
    imageLink = await storageTaskSnapshot.ref.getDownloadURL();
    return await _products.add({
      'uid': uid,
      'name': foodName,
      'description': productDescription,
      'pic1': imageLink,
    }).then((value) {

      return true;
    }).catchError((onError) {
      print(onError);
      print("The error");

      return false;
    });

  }

  /*Future<ByteData> toByteData({ImageByteFormat format = ImageByteFormat.rawRgba}) {
    assert(!_disposed && !_image._disposed);
    return _image.toByteData(format: format);
*/


}
